package com.org.coop.retail.servicehelper;

import java.util.Date;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.org.coop.bs.util.CommonValidationUtils;
import com.org.coop.bs.util.RetailBusinessConstants;
import com.org.coop.retail.entities.BranchMaster;
import com.org.coop.retail.entities.Transaction;
import com.org.coop.retail.repositories.TransactionRepository;

@Service
public class TransactionsServiceHelperImpl {

	private static final Logger log = Logger.getLogger(TransactionsServiceHelperImpl.class); 
	
	@Autowired
	private TransactionRepository transactionsRepository;
	
	@Autowired
	private CommonValidationUtils commonValidationUtils;
	
	@Transactional(value="retailTransactionManager", propagation=Propagation.REQUIRES_NEW)
	public String getTransactionNumber(int branchId, String purpose, String user, Date actionDate) {
		BranchMaster branch = commonValidationUtils.validateBranch(branchId);
		
		String tranNo = transactionsRepository.getTransactionNumber(branchId, actionDate);
		Transaction tx = new Transaction();
		tx.setPurpose(purpose);
		tx.setCreateUser(user);
		tx.setTranNo(tranNo);
		tx.setActionDate(actionDate);
		tx.setBranchMaster(branch);
		transactionsRepository.saveAndFlush(tx);
		return tranNo;
	}
	
	/**
	 * This method returns next available bill number for retail sale
	 * @param purpose
	 * @param user
	 * @param actionDate
	 * @return
	 */
	@Transactional(value="retailTransactionManager", propagation=Propagation.REQUIRED)
	public String getNextBillNumber(int branchId, String purpose, String user, Date actionDate) {
		BranchMaster branch = commonValidationUtils.validateBranch(branchId);
		String billNo = null;
		String tranNo = transactionsRepository.getTransactionNumber(branchId, actionDate);
		Transaction tx = new Transaction();
		tx.setPurpose(purpose);
		tx.setCreateUser(user);
		tx.setTranNo(tranNo);
		tx.setActionDate(actionDate);
		tx.setBranchMaster(branch);
		transactionsRepository.saveAndFlush(tx);
		
		if(RetailBusinessConstants.TRANSACTION_PURPOSE_RETAIL_SALE.equals(purpose)) {
			billNo = transactionsRepository.getBillNumber(branchId, purpose);
			tx.setBillNo(billNo);
		}
		return billNo;
	}
}
