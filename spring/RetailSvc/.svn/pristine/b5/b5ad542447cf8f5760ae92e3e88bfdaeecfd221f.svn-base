package com.org.coop.retail.entities;

import java.io.Serializable;

import javax.persistence.*;

import org.hibernate.annotations.Where;

import java.sql.Timestamp;
import java.util.List;


/**
 * The persistent class for the gl_master database table.
 * 
 */
@Entity
@Table(name="gl_master")
@NamedQuery(name="GlMaster.findAll", query="SELECT g FROM GlMaster g")
public class GlMaster implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
//	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name="gl_mas_code")
	private int glMasCode;

	@Column(name="annexure_id")
	private int annexureId;

	@Column(name="gl_mas_desc")
	private String glMasDesc;

	@Column(name="delete_ind")
	private String deleteInd;

	@Column(name="delete_reason")
	private String deleteReason;

	@Column(name="passing_auth_ind")
	private String passingAuthInd;

	@Column(name="passing_auth_remark")
	private String passingAuthRemark;

	@Column(name="create_date")
	private Timestamp createDate;

	@Column(name="create_user")
	private String createUser;
	
	@Column(name="update_date")
	private Timestamp updateDate;

	@Column(name="update_user")
	private String updateUser;
	
	//bi-directional many-to-one association to GlSubHeader
	@ManyToOne
	@JoinColumn(name="gl_sub_header_code")
	private GlSubHeader glSubHeader;

	//bi-directional many-to-one association to GlLedgerDtl
	@OneToMany(mappedBy="glMaster", fetch = FetchType.LAZY, cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH})
	private List<GlLedgerDtl> glLedgerDtls;

	//bi-directional many-to-one association to BankMaster
	@OneToMany(mappedBy="glMaster", fetch = FetchType.LAZY, cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH})
	@Where(clause="delete_ind is NULL")
	private List<BankMaster> bankMasters;
		
	public GlMaster() {
	}

	public int getGlMasCode() {
		return this.glMasCode;
	}

	public void setGlMasCode(int glMasCode) {
		this.glMasCode = glMasCode;
	}

	public int getAnnexureId() {
		return this.annexureId;
	}

	public void setAnnexureId(int annexureId) {
		this.annexureId = annexureId;
	}

	public String getGlMasDesc() {
		return this.glMasDesc;
	}

	public void setGlMasDesc(String glMasDesc) {
		this.glMasDesc = glMasDesc;
	}

	public GlSubHeader getGlSubHeader() {
		return this.glSubHeader;
	}

	public void setGlSubHeader(GlSubHeader glSubHeader) {
		this.glSubHeader = glSubHeader;
	}

	public List<GlLedgerDtl> getGlLedgerDtls() {
		return this.glLedgerDtls;
	}

	public void setGlLedgerDtls(List<GlLedgerDtl> glLedgerDtls) {
		this.glLedgerDtls = glLedgerDtls;
	}

	public GlLedgerDtl addGlLedgerDtl(GlLedgerDtl glLedgerDtl) {
		getGlLedgerDtls().add(glLedgerDtl);
		glLedgerDtl.setGlMaster(this);

		return glLedgerDtl;
	}

	public GlLedgerDtl removeGlLedgerDtl(GlLedgerDtl glLedgerDtl) {
		getGlLedgerDtls().remove(glLedgerDtl);
		glLedgerDtl.setGlMaster(null);

		return glLedgerDtl;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + glMasCode;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		GlMaster other = (GlMaster) obj;
		if (glMasCode != other.glMasCode)
			return false;
		return true;
	}

	public List<BankMaster> getBankMasters() {
		return this.bankMasters;
	}

	public void setBankMasters(List<BankMaster> bankMasters) {
		this.bankMasters = bankMasters;
	}

	public BankMaster addBankMaster(BankMaster bankMaster) {
		getBankMasters().add(bankMaster);
		bankMaster.setGlMaster(this);

		return bankMaster;
	}

	public BankMaster removeBankMaster(BankMaster bankMaster) {
		getBankMasters().remove(bankMaster);
		bankMaster.setGlMaster(null);

		return bankMaster;
	}

	public String getDeleteInd() {
		return deleteInd;
	}

	public void setDeleteInd(String deleteInd) {
		this.deleteInd = deleteInd;
	}

	public String getDeleteReason() {
		return deleteReason;
	}

	public void setDeleteReason(String deleteReason) {
		this.deleteReason = deleteReason;
	}

	public String getPassingAuthInd() {
		return passingAuthInd;
	}

	public void setPassingAuthInd(String passingAuthInd) {
		this.passingAuthInd = passingAuthInd;
	}

	public String getPassingAuthRemark() {
		return passingAuthRemark;
	}

	public void setPassingAuthRemark(String passingAuthRemark) {
		this.passingAuthRemark = passingAuthRemark;
	}

	public Timestamp getCreateDate() {
		return createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	public String getCreateUser() {
		return createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	public Timestamp getUpdateDate() {
		return updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}

	public String getUpdateUser() {
		return updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}
	
	@PreUpdate
	public void updateTimeStamps() {
		long currentTime = System.currentTimeMillis();
	    updateDate = new Timestamp(currentTime);
	    if (createDate == null) {
	    	createDate = new Timestamp(currentTime);
	    }
	}
}