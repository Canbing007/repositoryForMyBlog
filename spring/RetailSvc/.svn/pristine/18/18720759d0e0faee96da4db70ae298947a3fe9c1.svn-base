package com.org.coop.retail.servicehelper;

import java.util.ArrayList;
import java.util.List;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.org.coop.canonical.beans.BranchBean;
import com.org.coop.canonical.beans.MaterialGroupBean;
import com.org.coop.canonical.beans.MaterialMasterBean;
import com.org.coop.canonical.beans.UIModel;
import com.org.coop.retail.bs.mapper.RetailMaterialGroupMappingImpl;
import com.org.coop.retail.bs.mapper.RetailMaterialMappingImpl;
import com.org.coop.retail.entities.BranchMaster;
import com.org.coop.retail.entities.MaterialGroup;
import com.org.coop.retail.entities.MaterialMaster;
import com.org.coop.retail.repositories.RetailBranchMasterRepository;
import com.org.coop.retail.repositories.RetailMaterialGroupMasterRepository;
import com.org.coop.retail.repositories.RetailMaterialMasterRepository;

@Service
public class MaterialSetupServiceHelperImpl {

	private static final Logger log = Logger.getLogger(MaterialSetupServiceHelperImpl.class); 
	
	@Autowired
	private RetailMaterialGroupMasterRepository materialGroupMasterRepository;
	
	@Autowired
	private RetailMaterialMasterRepository materialMasterRepository;
	
	@Autowired
	private RetailMaterialGroupMappingImpl retailMaterialGroupMappingImpl;
	
	@Autowired
	private RetailMaterialMappingImpl retailMaterialMappingImpl;
	
	@Autowired
	private RetailBranchMasterRepository retailBranchMasterRepository;
	
	@Transactional(value="retailTransactionManager")
	public UIModel getMaterialGroup(int materialGroupId) {
		UIModel uiModel = new UIModel();
		// Check if the material group already exists
		MaterialGroup materialGroup = materialGroupMasterRepository.findOne(materialGroupId);
		if(materialGroup == null) {
			uiModel.setErrorMsg("Material Group does not exist for material group Id: " + materialGroupId);
			return uiModel;
		}
		MaterialGroupBean maerialGroupBean = new MaterialGroupBean();
		retailMaterialGroupMappingImpl.mapBean(materialGroup, maerialGroupBean);
		
		List<MaterialGroupBean> mgbList = new ArrayList<MaterialGroupBean>();
		mgbList.add(maerialGroupBean);
		uiModel.setBranchBean(new BranchBean());
		
		uiModel.getBranchBean().setMaterialGroups(mgbList);
		if(log.isDebugEnabled()) {
			log.debug("Material group does not exists by Material group id: " + materialGroupId);
		}
		return uiModel;
	}
	
	@Transactional(value="retailTransactionManager")
	public UIModel saveMaterialGroup(UIModel uiModel) {
		if(uiModel.getBranchBean().getMaterialGroups() != null && uiModel.getBranchBean().getMaterialGroups().size() > 0 ) {
			
			MaterialGroupBean mgb = uiModel.getBranchBean().getMaterialGroups().get(0);
			int materialGroupId = mgb.getMaterialGrpId();
			MaterialGroup materialGroup = null;
			if(materialGroupId == 0) {
				materialGroup = new MaterialGroup();
				BranchMaster branchMaster = retailBranchMasterRepository.findOne(mgb.getBranchId());
				if(branchMaster == null) {
					log.debug("Branch does not exist for branch Id: " + mgb.getBranchId());
					uiModel.setErrorMsg("Branch does not exists in our record. Please pass branch id correctly.");
					return uiModel;
				}
				materialGroup.setBranchMaster(branchMaster);
				if(log.isDebugEnabled()) {
					log.debug("Adding new material group");
				}
			} else {
				materialGroup = materialGroupMasterRepository.findOne(materialGroupId);
				if(log.isDebugEnabled()) {
					log.debug("Modifying existing material group materialGroupId = " + materialGroupId);
				}
			}
			MaterialGroupBean materialGroupBean = uiModel.getBranchBean().getMaterialGroups().get(0);
			
			retailMaterialGroupMappingImpl.mapBean(materialGroupBean, materialGroup);
			materialGroupMasterRepository.saveAndFlush(materialGroup);
			mgb.setMaterialGrpId(materialGroup.getMaterialGrpId());
		} else {
			uiModel.setErrorMsg("Material Group details not passed correctly");
		}
		
		return uiModel;
	}
	
	@Transactional(value="retailTransactionManager")
	public UIModel getMaterial(int materialId) {
		UIModel uiModel = new UIModel();
		MaterialMaster material = null;
		List<MaterialMaster> materials = new ArrayList<MaterialMaster>();
		
		// Check if the material already exists
		if(materialId > 0) {
			material = materialMasterRepository.findOne(materialId);
		} else {
			materials = materialMasterRepository.findAllMaterials();
		}
		if( materialId > 0 && material == null) {
			uiModel.setErrorMsg("Material does not exist for material Id: " + materialId);
			return uiModel;
		}
		
		if(materialId == 0 && (materials == null || materials.size() == 0)) {
			uiModel.setErrorMsg("No Materials exist ");
			return uiModel;
		}
		List<MaterialMasterBean> mmList = new ArrayList<MaterialMasterBean>();
		
		if(materialId > 0) {
			MaterialMasterBean materialBean = new MaterialMasterBean();
			retailMaterialMappingImpl.mapBean(material, materialBean);
			mmList.add(materialBean);
		} else {
			for(MaterialMaster mm : materials) {
				MaterialMasterBean materialBean = new MaterialMasterBean();
				retailMaterialMappingImpl.mapBean(mm, materialBean);
				mmList.add(materialBean);
			}
		}
		
		uiModel.setBranchBean(new BranchBean());
		
		List<MaterialGroupBean> mgbList = new ArrayList<MaterialGroupBean>();
		mgbList.add(new MaterialGroupBean());
		
		uiModel.getBranchBean().setMaterialGroups(mgbList);
		uiModel.getBranchBean().getMaterialGroups().get(0).setMaterials(mmList);
		if(log.isDebugEnabled()) {
			log.debug("Material does not exists for Material id: " + materialId);
		}
		return uiModel;
	}
	
	@Transactional(value="retailTransactionManager")
	public UIModel saveMaterial(UIModel uiModel) {
		if(uiModel.getBranchBean().getMaterialGroups() != null && uiModel.getBranchBean().getMaterialGroups().size() > 0 ) {
			
			MaterialMasterBean materialBean = uiModel.getBranchBean().getMaterialGroups().get(0).getMaterials().get(0);
			int materialId = materialBean.getMaterialId();
			MaterialMaster material = null;
			if(materialId == 0) {
				material = new MaterialMaster();
				MaterialGroup materialGroup = materialGroupMasterRepository.findOne(materialBean.getMaterialGrpId());
				if(materialGroup == null) {
					log.debug("Material group does not exist for material group Id: " + materialBean.getMaterialGrpId());
					uiModel.setErrorMsg("Material Group does not exists in our record. Please pass material group Id correctly.");
					return uiModel;
				}
				material.setMaterialGroup(materialGroup);
				if(log.isDebugEnabled()) {
					log.debug("Adding new material");
				}
			} else {
				material = materialMasterRepository.findOne(materialId);
				if(log.isDebugEnabled()) {
					log.debug("Modifying existing material for materialId = " + materialId);
				}
			}
			
			retailMaterialMappingImpl.mapBean(materialBean, material);
			materialMasterRepository.saveAndFlush(material);
			materialBean.setMaterialId(material.getMaterialId());
		} else {
			uiModel.setErrorMsg("Material details not passed correctly");
		}
		
		return uiModel;
	}
	
}
