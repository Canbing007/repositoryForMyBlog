package com.org.coop.admin.ws;

import org.apache.log4j.Logger;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;

import com.org.coop.canonical.beans.UIModel;

@RestController
@RequestMapping("/rest")
public class BranchSetupSecurityWSImpl extends BasicSecurityWSImpl {
	
	private static final Logger log = Logger.getLogger(BranchSetupSecurityWSImpl.class); 
	
	@PreAuthorize("hasRole('ROLE_ADMIN_CREATE')")
	@RequestMapping(value = "/createBranch", method = RequestMethod.POST, headers="Accept=application/json",produces="application/json",consumes="application/json")
	public UIModel createBranch(@RequestBody UIModel uiModel) {
		try {
			String url = env.getProperty("adminSvc.application.url") + "/createBranch";
			RestTemplate restTemplate = new RestTemplate();
			HttpHeaders headers = new HttpHeaders();
    		headers.setContentType(MediaType.APPLICATION_JSON);
			HttpEntity<UIModel> entity = new HttpEntity<UIModel>(uiModel, headers);
			ResponseEntity<UIModel> responseObj = restTemplate.exchange(url, HttpMethod.POST, entity, UIModel.class);
			log.debug(responseObj.getBody());
		} catch (Exception e) {
			log.error("Error Creating new branch", e);
			uiModel.setErrorMsg("Error Creating new branch");
		}
		return uiModel;
	}
	
	@PreAuthorize("hasRole('ROLE_ADMIN_READ')")
	@RequestMapping(value = "/getBranch", method = RequestMethod.GET, headers="Accept=application/json",produces="application/json")
	public UIModel getBranch(@RequestParam(value = "branchId",required = true,defaultValue = "0") Integer branchId) {
		UIModel uiModel = new UIModel();
		try {
//			String url = "http://localhost:8080/AdminSvcWS/rest/getBranch?branchId="+branchId;
			String url = env.getProperty("adminSvc.application.url") + "/getBranch?branchId="+branchId;
			RestTemplate restTemplate = new RestTemplate();
			ResponseEntity<UIModel> responseObj = restTemplate.exchange(url, HttpMethod.GET, getHttpEntities(), UIModel.class);
			uiModel = responseObj.getBody();
			log.debug(responseObj);
	        
		} catch (Exception e) {
			log.error("Error Retrieving branch by branch Id", e);
			uiModel.setErrorMsg("Error Retrieving branch by branch Id: " + branchId);
		}
		return uiModel;
	}
	
}
