package com.org.coop.retail.entities;

import java.io.Serializable;

import javax.persistence.*;

import org.hibernate.annotations.Where;

import java.sql.Timestamp;
import java.math.BigDecimal;
import java.util.Date;
import java.util.List;


/**
 * The persistent class for the material_tran_hrd database table.
 * 
 */
@Entity
@Table(name="material_tran_hrd")
@NamedQuery(name="MaterialTranHrd.findAll", query="SELECT m FROM MaterialTranHrd m")
public class MaterialTranHrd implements Serializable {
	private static final long serialVersionUID = 1L;

	@Id
	@GeneratedValue(strategy=GenerationType.AUTO)
	@Column(name="tran_id")
	private int tranId;

	@Temporal(TemporalType.DATE)
	@Column(name="action_date")
	private Date actionDate;

	@Column(name="bill_amt")
	private BigDecimal billAmt;

	@Temporal(TemporalType.DATE)
	@Column(name="bill_date")
	private Date billDate;

	@Column(name="bill_no")
	private String billNo;

	@Column(name="create_date")
	private Timestamp createDate;

	@Column(name="create_user")
	private String createUser;

	@Column(name="delete_ind")
	private String deleteInd;

	@Column(name="delete_reason")
	private String deleteReason;

	private BigDecimal discount;

	@Column(name="gross_total")
	private BigDecimal grossTotal;

	@Column(name="outstanding_amt")
	private BigDecimal outstandingAmt;

	@Column(name="paid_amt")
	private BigDecimal paidAmt;

	@Column(name="paid_by")
	private String paidBy;

	@Column(name="passing_auth_ind")
	private String passingAuthInd;

	@Column(name="passing_auth_remark")
	private String passingAuthRemark;

	@Column(name="tran_no")
	private String tranNo;

	@Column(name="tran_type")
	private String tranType;

	@Column(name="update_date")
	private Timestamp updateDate;

	@Column(name="update_user")
	private String updateUser;

	private BigDecimal vat;

	//bi-directional many-to-one association to MaterialTranDtl
	@OneToMany(mappedBy="materialTranHrd", fetch = FetchType.LAZY, cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH})
	@Where(clause="delete_ind is NULL")
	private List<MaterialTranDtl> materialTranDtls;

	//bi-directional many-to-one association to BranchMaster
	@ManyToOne
	@JoinColumn(name="branch_id")
	private BranchMaster branchMaster;

	//bi-directional many-to-one association to RetailTransaction
	@OneToMany(mappedBy="materialTranHrd", fetch = FetchType.LAZY, cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH})
	@Where(clause="delete_ind is NULL")
	private List<RetailTransaction> retailTransactions;
	
	//bi-directional many-to-one association to StockSell
	@OneToMany(mappedBy="materialTranHrd", fetch = FetchType.LAZY, cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH})
	@Where(clause="delete_ind is NULL")
	private List<StockSell> stockSells;

	//bi-directional many-to-one association to RetailPayment
	@OneToMany(mappedBy="materialTranHrd", fetch = FetchType.LAZY, cascade={CascadeType.PERSIST,CascadeType.MERGE,CascadeType.REFRESH})
	@Where(clause="delete_ind is NULL")
	private List<RetailPayment> retailPayments;

	public MaterialTranHrd() {
	}

	public int getTranId() {
		return this.tranId;
	}

	public void setTranId(int tranId) {
		this.tranId = tranId;
	}

	public Date getActionDate() {
		return this.actionDate;
	}

	public void setActionDate(Date actionDate) {
		this.actionDate = actionDate;
	}

	public BigDecimal getBillAmt() {
		return this.billAmt;
	}

	public void setBillAmt(BigDecimal billAmt) {
		this.billAmt = billAmt;
	}

	public Date getBillDate() {
		return this.billDate;
	}

	public void setBillDate(Date billDate) {
		this.billDate = billDate;
	}

	public String getBillNo() {
		return this.billNo;
	}

	public void setBillNo(String billNo) {
		this.billNo = billNo;
	}

	public Timestamp getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Timestamp createDate) {
		this.createDate = createDate;
	}

	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	public String getDeleteInd() {
		return this.deleteInd;
	}

	public void setDeleteInd(String deleteInd) {
		this.deleteInd = deleteInd;
	}

	public String getDeleteReason() {
		return this.deleteReason;
	}

	public void setDeleteReason(String deleteReason) {
		this.deleteReason = deleteReason;
	}

	public BigDecimal getDiscount() {
		return this.discount;
	}

	public void setDiscount(BigDecimal discount) {
		this.discount = discount;
	}

	public BigDecimal getGrossTotal() {
		return this.grossTotal;
	}

	public void setGrossTotal(BigDecimal grossTotal) {
		this.grossTotal = grossTotal;
	}

	public BigDecimal getOutstandingAmt() {
		return this.outstandingAmt;
	}

	public void setOutstandingAmt(BigDecimal outstandingAmt) {
		this.outstandingAmt = outstandingAmt;
	}

	public BigDecimal getPaidAmt() {
		return this.paidAmt;
	}

	public void setPaidAmt(BigDecimal paidAmt) {
		this.paidAmt = paidAmt;
	}

	public String getPaidBy() {
		return this.paidBy;
	}

	public void setPaidBy(String paidBy) {
		this.paidBy = paidBy;
	}

	public String getPassingAuthInd() {
		return this.passingAuthInd;
	}

	public void setPassingAuthInd(String passingAuthInd) {
		this.passingAuthInd = passingAuthInd;
	}

	public String getPassingAuthRemark() {
		return this.passingAuthRemark;
	}

	public void setPassingAuthRemark(String passingAuthRemark) {
		this.passingAuthRemark = passingAuthRemark;
	}

	public String getTranNo() {
		return this.tranNo;
	}

	public void setTranNo(String tranNo) {
		this.tranNo = tranNo;
	}

	public String getTranType() {
		return this.tranType;
	}

	public void setTranType(String tranType) {
		this.tranType = tranType;
	}

	public Timestamp getUpdateDate() {
		return this.updateDate;
	}

	public void setUpdateDate(Timestamp updateDate) {
		this.updateDate = updateDate;
	}

	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	public BigDecimal getVat() {
		return this.vat;
	}

	public void setVat(BigDecimal vat) {
		this.vat = vat;
	}

	public List<MaterialTranDtl> getMaterialTranDtls() {
		return this.materialTranDtls;
	}

	public void setMaterialTranDtls(List<MaterialTranDtl> materialTranDtls) {
		this.materialTranDtls = materialTranDtls;
	}

	public MaterialTranDtl addMaterialTranDtl(MaterialTranDtl materialTranDtl) {
		getMaterialTranDtls().add(materialTranDtl);
		materialTranDtl.setMaterialTranHrd(this);

		return materialTranDtl;
	}

	public MaterialTranDtl removeMaterialTranDtl(MaterialTranDtl materialTranDtl) {
		getMaterialTranDtls().remove(materialTranDtl);
		materialTranDtl.setMaterialTranHrd(null);

		return materialTranDtl;
	}

	public BranchMaster getBranchMaster() {
		return this.branchMaster;
	}

	public void setBranchMaster(BranchMaster branchMaster) {
		this.branchMaster = branchMaster;
	}

	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + tranId;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		MaterialTranHrd other = (MaterialTranHrd) obj;
		if (tranId != other.tranId)
			return false;
		return true;
	}

	@PreUpdate
	public void updateTimeStamps() {
	    updateDate = new Timestamp(System.currentTimeMillis());
	    if (createDate == null) {
	    	createDate = new Timestamp(System.currentTimeMillis());
	    }
	}
	

	public List<StockSell> getStockSells() {
		return this.stockSells;
	}

	public void setStockSells(List<StockSell> stockSells) {
		this.stockSells = stockSells;
	}

	public StockSell addStockSell(StockSell stockSell) {
		getStockSells().add(stockSell);
		stockSell.setMaterialTranHrd(this);

		return stockSell;
	}

	public StockSell removeStockSell(StockSell stockSell) {
		getStockSells().remove(stockSell);
		stockSell.setMaterialTranHrd(null);

		return stockSell;
	}

	public List<RetailPayment> getRetailPayments() {
		return this.retailPayments;
	}

	public void setRetailPayments(List<RetailPayment> retailPayments) {
		this.retailPayments = retailPayments;
	}

	public RetailPayment addRetailPayment(RetailPayment retailPayment) {
		getRetailPayments().add(retailPayment);
		retailPayment.setMaterialTranHrd(this);

		return retailPayment;
	}

	public RetailPayment removeRetailPayment(RetailPayment retailPayment) {
		getRetailPayments().remove(retailPayment);
		retailPayment.setMaterialTranHrd(null);

		return retailPayment;
	}

	public List<RetailTransaction> getRetailTransactions() {
		return retailTransactions;
	}

	public void setRetailTransactions(List<RetailTransaction> retailTransactions) {
		this.retailTransactions = retailTransactions;
	}

}